{"ast":null,"code":"var _jsxFileName = \"/Users/mohaosman/Desktop/memories/client/react/src/components/form/form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport FileBase from 'react-file-base64';\nimport { useDispatch, useSelector } from 'react-redux'; //import styles\n\nimport useStyles from './styles';\nimport { createPost, updatePost } from \"../../actions/posts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = _ref => {\n  _s();\n\n  let {\n    currentId,\n    setCurrentId\n  } = _ref;\n  const [postData, setPostData] = useState({\n    creator: '',\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: ''\n  });\n  const post = useSelector(state => currentId ? state.posts.find(p => p._id === currentId) : null);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (currentId) {\n      dispatch(updatePost(currentId, postData));\n    } else {\n      dispatch(createPost(postData));\n    }\n\n    clear();\n  };\n\n  const clear = () => {\n    setCurrentId(null);\n    setPostData({\n      creator: '',\n      title: '',\n      message: '',\n      tags: '',\n      selectedFile: ''\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      className: `${classes.root} ${classes.form}`,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: currentId ? `Editing \"${post.title}\"` : 'Creating a Memory'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"creator\",\n        variant: \"outlined\",\n        label: \"Creator\",\n        fullWidth: true,\n        value: postData.creator,\n        onChange: e => setPostData({ ...postData,\n          creator: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"title\",\n        variant: \"outlined\",\n        label: \"Title\",\n        fullWidth: true,\n        value: postData.title,\n        onChange: e => setPostData({ ...postData,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"message\",\n        variant: \"outlined\",\n        label: \"Message\",\n        fullWidth: true,\n        multiline: true,\n        rows: 4,\n        value: postData.message,\n        onChange: e => setPostData({ ...postData,\n          message: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"tags\",\n        variant: \"outlined\",\n        label: \"Tags (coma separated)\",\n        fullWidth: true,\n        value: postData.tags,\n        onChange: e => setPostData({ ...postData,\n          tags: e.target.value.split(',')\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.fileInput,\n        children: /*#__PURE__*/_jsxDEV(FileBase, {\n          type: \"file\",\n          multiple: false,\n          onDone: _ref2 => {\n            let {\n              base64\n            } = _ref2;\n            return setPostData({ ...postData,\n              selectedFile: base64\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.buttonSubmit,\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        type: \"submit\",\n        fullWidth: true,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        size: \"small\",\n        onClick: clear,\n        fullWidth: true,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Form, \"y7lc6N/1vyNItCjWulW+dMuL/ko=\", false, function () {\n  return [useSelector, useStyles, useDispatch];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","useEffect","TextField","Button","Typography","Paper","FileBase","useDispatch","useSelector","useStyles","createPost","updatePost","Form","currentId","setCurrentId","postData","setPostData","creator","title","message","tags","selectedFile","post","state","posts","find","p","_id","classes","dispatch","handleSubmit","e","preventDefault","clear","paper","root","form","target","value","split","fileInput","base64","buttonSubmit"],"sources":["/Users/mohaosman/Desktop/memories/client/react/src/components/form/form.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { TextField, Button, Typography, Paper} from '@material-ui/core';\nimport FileBase from 'react-file-base64';\n\nimport { useDispatch, useSelector } from 'react-redux';\n//import styles\nimport useStyles from './styles';\nimport { createPost, updatePost } from \"../../actions/posts\";\n\nconst Form = ({currentId, setCurrentId}) => {\n    const [postData, setPostData] = useState({ creator: '', title: '', message: '', tags: '', selectedFile: ''});\n    const post = useSelector((state) => currentId ? state.posts.find((p) => p._id === currentId): null);\n    const classes = useStyles();\n    const dispatch = useDispatch();\n\n    useEffect (() => {\n        if (post) setPostData(post);\n    }, [post]);        \n\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n    \n        if (currentId) {\n          dispatch(updatePost(currentId, postData));\n        } else {\n          dispatch(createPost(postData));\n        }\n        clear();\n      };\n\n    const clear = () => {\n      setCurrentId(null);\n      setPostData({ creator: '', title: '', message: '', tags: '', selectedFile: ''});\n    }\n\n    return (\n      <Paper className={classes.paper}>\n        <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n          <Typography variant=\"h6\">{currentId ? `Editing \"${post.title}\"` : 'Creating a Memory'}</Typography>\n          <TextField name=\"creator\" variant=\"outlined\" label=\"Creator\" fullWidth value={postData.creator} onChange={(e) => setPostData({ ...postData, creator: e.target.value })} />\n          <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.title} onChange={(e) => setPostData({ ...postData, title: e.target.value })} />\n          <TextField name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth multiline rows={4} value={postData.message} onChange={(e) => setPostData({ ...postData, message: e.target.value })} />\n          <TextField name=\"tags\" variant=\"outlined\" label=\"Tags (coma separated)\" fullWidth value={postData.tags} onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',') })} />\n          <div className={classes.fileInput}><FileBase type=\"file\" multiple={false} onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} /></div>\n          <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\n          <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n        </form>\n      </Paper>\n    );\n  };\n\nexport default Form;"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/mohaosman/Desktop/memories/client/react/src/components/posts/posts.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\"; //import grid from material ui\n\nimport { Grid, CircularProgress } from '@material-ui/core'; //fetch the data from global redux store\n\nimport { useSelector } from 'react-redux';\nimport Post from \"./post/post\"; //import styles\n\nimport useStyles from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Posts = () => {\n  _s();\n\n  const posts = useSelector(state => state.posts);\n  const classes = useStyles();\n  return (//if post length is 0 then show circular progress\n    //otherwise return this\n    //use javascript logic to loop over the posts and return a grid of type item           \n    !posts.length ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 26\n    }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n      className: classes.container,\n      container: true,\n      alignItems: \"stretch\",\n      spacing: 3,\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Post, {\n          post: post\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this)\n      }, post._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  );\n};\n\n_s(Posts, \"C/BxEwR0KgzJ2Knmlc9v0LYcdx8=\", false, function () {\n  return [useSelector, useStyles];\n});\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","Grid","CircularProgress","useSelector","Post","useStyles","Posts","posts","state","classes","length","container","map","post","_id"],"sources":["/Users/mohaosman/Desktop/memories/client/react/src/components/posts/posts.js"],"sourcesContent":["import React from \"react\";\n\n//import grid from material ui\nimport { Grid, CircularProgress } from '@material-ui/core';\n\n//fetch the data from global redux store\nimport { useSelector } from 'react-redux';\n\nimport Post from \"./post/post\";\n\n//import styles\nimport useStyles from './styles';\n\nconst Posts = () => {\n    const posts = useSelector((state) => state.posts);\n    const classes = useStyles();\n    \n    return (\n         //if post length is 0 then show circular progress\n         //otherwise return this\n         //use javascript logic to loop over the posts and return a grid of type item           \n         !posts.length ? <CircularProgress /> : (\n            <Grid className={classes.container} container alignItems=\"stretch\" spacing={3}>\n                {posts.map((post) => (\n                    <Grid key={post._id} item xs={12} sm={6} md={6}>\n                        <Post post={post} />\n                    </Grid>\n                ))}\n            </Grid>\n         )\n    );\n}\n\nexport default Posts;"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,SAASC,IAAT,EAAeC,gBAAf,QAAuC,mBAAvC,C,CAEA;;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAOC,IAAP,MAAiB,aAAjB,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,UAAtB;;;AAEA,MAAMC,KAAK,GAAG,MAAM;EAAA;;EAChB,MAAMC,KAAK,GAAGJ,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACD,KAAlB,CAAzB;EACA,MAAME,OAAO,GAAGJ,SAAS,EAAzB;EAEA,OACK;IACA;IACA;IACA,CAACE,KAAK,CAACG,MAAP,gBAAgB,QAAC,gBAAD;MAAA;MAAA;MAAA;IAAA,QAAhB,gBACG,QAAC,IAAD;MAAM,SAAS,EAAED,OAAO,CAACE,SAAzB;MAAoC,SAAS,MAA7C;MAA8C,UAAU,EAAC,SAAzD;MAAmE,OAAO,EAAE,CAA5E;MAAA,UACKJ,KAAK,CAACK,GAAN,CAAWC,IAAD,iBACP,QAAC,IAAD;QAAqB,IAAI,MAAzB;QAA0B,EAAE,EAAE,EAA9B;QAAkC,EAAE,EAAE,CAAtC;QAAyC,EAAE,EAAE,CAA7C;QAAA,uBACI,QAAC,IAAD;UAAM,IAAI,EAAEA;QAAZ;UAAA;UAAA;UAAA;QAAA;MADJ,GAAWA,IAAI,CAACC,GAAhB;QAAA;QAAA;QAAA;MAAA,QADH;IADL;MAAA;MAAA;MAAA;IAAA;EALR;AAcH,CAlBD;;GAAMR,K;UACYH,W,EACEE,S;;;KAFdC,K;AAoBN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}